{
  "version": 3,
  "sources": ["../node_modules/@stripe/src/version.ts", "../node_modules/@stripe/src/ui/index.tsx", "../node_modules/invariant/browser.js", "../node_modules/@stripe/src/utils/_endpoint.ts", "../node_modules/@stripe/src/utils/apiFetch.ts", "../node_modules/@stripe/src/utils/clipboard.ts", "../node_modules/@stripe/src/utils/context.ts", "../node_modules/@stripe/src/utils/httpClient.ts", "../node_modules/@stripe/src/utils/getDashboardUserEmail.ts", "../node_modules/@stripe/src/utils/getUserAuthorizedPermissions.ts", "../node_modules/@stripe/src/utils/isPermissionAuthorized.ts", "../node_modules/@stripe/src/utils/isSourceInAuthorizedCSP.ts", "../node_modules/@stripe/src/utils/oauth.ts", "../node_modules/@stripe/ui-extension-sdk/utils/platformRpcs.js", "../node_modules/@stripe/src/utils/signature.ts", "../node_modules/@stripe/src/utils/toast.ts", "../node_modules/@stripe/src/utils/index.ts", "manifest.js", "../src/views/Home.tsx", "../src/views/Customers.tsx", "../src/views/CustomerDetails.tsx"],
  "sourcesContent": [null, null, "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n", null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=platformRpcs.js.map", null, null, null, "\nimport Home from '../src/views/Home';import Customers from '../src/views/Customers';import CustomerDetails from '../src/views/CustomerDetails';\n\nexport * from '@stripe/ui-extension-sdk/version';\nexport const BUILD_TIME = '2025-07-20 17:07:13.525069 +0100 BST m=+6047.649076251';\n\nexport { \n  Home,\t\n\n  Customers,\t\n\n  CustomerDetails\t\n };\n\nexport default {\n  \"id\": \"com.example.connecttomailchimp\",\n  \"version\": \"0.0.2\",\n  \"name\": \"Connect to Mailchimp\",\n  \"icon\": \"\",\n  \"permissions\": [\n    {\n      \"permission\": \"checkout_session_read\",\n      \"purpose\": \"Read Checkout Session data in webhook events\"\n    }\n  ],\n  \"connect_permissions\": null,\n  \"ui_extension\": {\n    \"views\": [\n      {\n        \"viewport\": \"stripe.dashboard.home.overview\",\n        \"component\": \"Home\"\n      },\n      {\n        \"viewport\": \"stripe.dashboard.customer.list\",\n        \"component\": \"Customers\"\n      },\n      {\n        \"viewport\": \"stripe.dashboard.customer.detail\",\n        \"component\": \"CustomerDetails\"\n      }\n    ],\n    \"content_security_policy\": {\n      \"connect-src\": null,\n      \"image-src\": null,\n      \"purpose\": \"\"\n    }\n  },\n  \"distribution_type\": \"private\"\n};\n", "import {\n  Box,\n  ContextView,\n  Button,\n  Inline,\n  Link,\n} from \"@stripe/ui-extension-sdk/ui\";\nimport type { ExtensionContextValue } from \"@stripe/ui-extension-sdk/context\";\nimport { fetchStripeSignature } from \"@stripe/ui-extension-sdk/utils\";\n\nimport BrandIcon from \"./brand_icon.svg\";\nimport { useState } from \"react\";\n\nconst Home = ({ userContext, environment }: ExtensionContextValue) => {\n  const [mailchimpExists, setMailchimpExists] = useState<boolean | null>(null);\n  const [mailchimpData, setMailchimpData] = useState<{ stripeAccountId?: string; mailchimpAccountId?: string } | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const createUser = async () => {\n    const signature = await fetchStripeSignature();\n\n    const response = await fetch(\"http://localhost:8080/api/stripe/create\", {\n      method: \"POST\",\n      headers: {\n        \"Stripe-Signature\": signature,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id: userContext?.id,\n        account_id: userContext?.account?.id,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to create user\");\n    }\n\n    return await response.json();\n  };\n\n  const checkMailchimpUser = async () => {\n    const signature = await fetchStripeSignature();\n\n    const response = await fetch(\"http://localhost:8080/api/stripe/account/mailchimp\", {\n      method: \"POST\",\n      headers: {\n        \"Stripe-Signature\": signature,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user_id: userContext?.id,\n        account_id: userContext?.account?.id,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch Mailchimp user\");\n    }\n\n    return await response.json();\n  };\n\n  const handleClick = async () => {\n    setLoading(true);\n    setError(null);\n    setMailchimpExists(null);\n    setMailchimpData(null);\n\n    try {\n      await createUser();\n\n      const mailchimpResponse = await checkMailchimpUser();\n\n      if (mailchimpResponse.exists) {\n        setMailchimpExists(true);\n        setMailchimpData({\n          stripeAccountId: mailchimpResponse.stripeAccountId,\n          mailchimpAccountId: mailchimpResponse.mailchimpAccountId,\n        });\n      } else {\n        setMailchimpExists(false);\n      }\n    } catch (err) {\n      setError((err as Error).message || \"Unknown error\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <ContextView\n      title=\"Dashboard homepage\"\n      brandColor=\"#F6F8FA\"\n      brandIcon={BrandIcon}\n      externalLink={{\n        label: \"Stripe Apps docs\",\n        href: \"https://stripe.com/docs/stripe-apps\",\n      }}\n      footerContent={\n        <Box css={{ marginBottom: \"medium\" }}>\n          Questions? Get help with your app from the{\" \"}\n          <Link\n            external\n            href=\"https://stripe.com/docs/stripe-apps\"\n            target=\"_blank\"\n            type=\"secondary\"\n          >\n            Stripe Apps docs\n          </Link>\n          ,{\" \"}\n          <Link\n            external\n            href=\"https://support.stripe.com/\"\n            target=\"_blank\"\n            type=\"secondary\"\n          >\n            Stripe Support\n          </Link>\n          , or the{\" \"}\n          <Link\n            external\n            href=\"https://discord.com/invite/stripe\"\n            target=\"_blank\"\n            type=\"secondary\"\n          >\n            Stripe Developers Discord\n          </Link>\n          .\n        </Box>\n      }\n    >\n      <Box css={{ stack: \"y\", rowGap: \"large\" }}>\n        <Button onPress={handleClick} loading={loading}>\n          Call Backend 1\n        </Button>\n\n        {error && <Inline tone=\"critical\">Error: {error}</Inline>}\n\n        {mailchimpExists === true && mailchimpData && (\n          <Box>\n            <Inline>\n              Mailchimp user exists! <br />\n              Stripe Account ID: {mailchimpData.stripeAccountId} <br />\n            </Inline>\n          </Box>\n        )}\n\n        {mailchimpExists === false && (\n          <Box css={{ stack: \"y\", rowGap: \"medium\" }}>\n          <Inline>\n            Here I need to show the option that will redirect the user to Mailchimp.\n          </Inline>\n          <Button\n            onPress={() => {\n              const clientId = \"386657553310\"; // Replace with your actual client ID\n              const redirectUri = encodeURIComponent(\"http://localhost:8080/oauth/mailchimp/callback\"); // Replace with your backend callback URL\n              const responseType = \"code\";\n              const state = userContext?.account?.id ?? \"\";\n\n              \n      \n              const authUrl = `http://localhost:8080/oauth/mailchimp/start?state=${state}`;\n      \n              window.location.href = authUrl;\n            }}\n          >\n            Connect Mailchimp\n          </Button>\n        </Box>\n        )}\n      </Box>\n    </ContextView>\n  );\n};\n\nexport default Home;\n", "import {\n  Box,\n  ContextView,\n  Divider,\n  Inline,\n  Link,\n} from \"@stripe/ui-extension-sdk/ui\";\nimport type { ExtensionContextValue } from \"@stripe/ui-extension-sdk/context\";\n\nimport BrandIcon from \"./brand_icon.svg\";\n\n/**\n * This is a view that is rendered in the Stripe dashboard's customer list page.\n * In stripe-app.json, this view is configured with stripe.dashboard.customer.list viewport.\n * You can add a new view by running \"stripe apps add view\" from the CLI.\n */\nconst Customers = ({ userContext, environment }: ExtensionContextValue) => {\n  return (\n    <ContextView\n      title=\"Customers page\"\n      brandColor=\"#F6F8FA\" // replace this with your brand color\n      brandIcon={BrandIcon} // replace this with your brand icon\n      externalLink={{\n        label: \"Stripe Apps docs\",\n        href: \"https://stripe.com/docs/stripe-apps\",\n      }}\n      footerContent={\n        <Box css={{ marginBottom: \"medium\" }}>\n          Questions? Get help with your app from the{\" \"}\n          <Link\n            external\n            href=\"https://stripe.com/docs/stripe-apps\"\n            target=\"_blank\"\n            type=\"secondary\"\n          >\n            Stripe Apps docs\n          </Link>\n          ,\n          <Link\n            external\n            href=\"https://support.stripe.com/\"\n            target=\"_blank\"\n            type=\"secondary\"\n          >\n            Stripe Support\n          </Link>\n          , or the{\" \"}\n          <Link\n            external\n            href=\"https://discord.com/invite/stripe\"\n            target=\"_blank\"\n            type=\"secondary\"\n          >\n            Stripe Developers Discord\n          </Link>\n          .\n        </Box>\n      }\n    >\n      <Box css={{ stack: \"y\", rowGap: \"large\" }}>\n        <Box>\n          Click on a customer (or create a new one) to navigate to that\n          customer&rsquo;s detail view.\n        </Box>\n        <Divider />\n        <Box css={{ color: \"info\" }}>\n          Edit the file{\" \"}\n          <Inline css={{ fontFamily: \"monospace\", wordBreak: \"break-all\" }}>\n            src/views/Customers.tsx\n          </Inline>{\" \"}\n          and save to reload this view.\n        </Box>\n      </Box>\n    </ContextView>\n  );\n};\n\nexport default Customers;\n", "import { useCallback } from \"react\";\n\nimport {\n  Box,\n  Button,\n  ContextView,\n  Divider,\n  Icon,\n  Inline,\n  Link,\n} from \"@stripe/ui-extension-sdk/ui\";\nimport type { ExtensionContextValue } from \"@stripe/ui-extension-sdk/context\";\nimport { clipboardWriteText } from \"@stripe/ui-extension-sdk/utils\";\n\nimport BrandIcon from \"./brand_icon.svg\";\n\n/**\n * This is a view that is rendered in the Stripe dashboard's customer detail page.\n * In stripe-app.json, this view is configured with stripe.dashboard.customer.detail viewport.\n * You can add a new view by running \"stripe apps add view\" from the CLI.\n */\nconst CustomerDetails = ({\n  userContext,\n  environment,\n}: ExtensionContextValue) => {\n  const CLIPBOARD_TEXT = \"stripe apps add view\";\n\n  const writeToClipboard = useCallback(async () => {\n    try {\n      await clipboardWriteText(CLIPBOARD_TEXT);\n      // Writing to the clipboard succeeded\n    } catch (e) {\n      // Writing to the clipboard failed\n      console.error(\"Writing to the clipboard failed.\");\n    }\n  }, []);\n\n  return (\n    <ContextView\n      title=\"Customer details page\"\n      brandColor=\"#F6F8FA\" // replace this with your brand color\n      brandIcon={BrandIcon} // replace this with your brand icon\n      externalLink={{\n        label: \"Stripe Apps docs\",\n        href: \"https://stripe.com/docs/stripe-apps\",\n      }}\n      footerContent={\n        <>\n          <Box css={{ marginBottom: \"medium\" }}>\n            Questions? Get help with your app from the{\" \"}\n            <Link\n              external\n              href=\"https://stripe.com/docs/stripe-apps\"\n              target=\"_blank\"\n              type=\"secondary\"\n            >\n              Stripe Apps docs\n            </Link>\n            ,\n            <Link\n              external\n              href=\"https://support.stripe.com/\"\n              target=\"_blank\"\n              type=\"secondary\"\n            >\n              Stripe Support\n            </Link>\n            , or the{\" \"}\n            <Link\n              external\n              href=\"https://discord.com/invite/stripe\"\n              target=\"_blank\"\n              type=\"secondary\"\n            >\n              Stripe Developers Discord\n            </Link>\n            .\n          </Box>\n        </>\n      }\n    >\n      <Box css={{ font: \"heading\" }}>Next steps</Box>\n      <Box css={{ stack: \"y\", rowGap: \"large\" }}>\n        {/* UI Components resource */}\n        <Box>\n          Build your app with these{\" \"}\n          <Inline>\n            <Link\n              external\n              href=\"https://docs.stripe.com/stripe-apps/components\"\n            >\n              UI Components.\n            </Link>\n          </Inline>\n        </Box>\n\n        {/* Creating a new view */}\n        <Box>\n          To create more views for your app use\n          <Box\n            css={{\n              stack: \"x\",\n              distribute: \"space-between\",\n            }}\n          >\n            {/* Example of a UI Extension SDK method: https://docs.stripe.com/stripe-apps/reference/extensions-sdk-api#functions */}\n            <Box\n              css={{\n                alignSelfY: \"center\",\n                background: \"container\",\n                borderRadius: \"medium\",\n                padding: \"small\",\n                fontFamily: \"monospace\",\n              }}\n            >\n              $ {CLIPBOARD_TEXT}\n            </Box>\n            <Box css={{ alignSelfY: \"center\" }}>\n              <Button onPress={writeToClipboard}>\n                <Icon size=\"small\" name=\"clipboard\" />\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n\n        <Box>\n          Learn more about views, authentication, and accessing data in{\" \"}\n          <Link\n            external\n            href=\"https://stripe.com/docs/stripe-apps\"\n            target=\"_blank\"\n          >\n            Stripe Apps docs\n          </Link>\n          .\n        </Box>\n        <Divider />\n        <Box css={{ color: \"info\" }}>\n          Edit the file{\" \"}\n          <Inline css={{ fontFamily: \"monospace\" }}>\n            src/views/CustomerDetails.tsx\n          </Inline>{\" \"}\n          and save to reload this view.\n        </Box>\n      </Box>\n    </ContextView>\n  );\n};\n\nexport default CustomerDetails;\n"],
  "mappings": "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",
  "names": ["exports", "react_1", "version_1", "withSdkProps", "Component", "wrappedComponentName", "WithSdkProps", "props", "jsx_runtime_1", "defineComponent", "name", "fragmentProps", "wrapWithSdkProps", "remoteComponent", "exports", "require_browser", "__commonJSMin", "exports", "module", "invariant", "condition", "format", "a", "b", "c", "d", "e", "f", "error", "args", "argIndex", "invariant_1", "__importDefault", "getHostEndpoint", "hostEndpoint", "_a", "exports", "_endpoint_1", "stripeApiFetch", "path", "req", "e", "exports", "_endpoint_1", "clipboardWriteText", "text", "exports", "React", "__importStar", "_endpoint_1", "useRefreshDashboardData", "exports", "invariant_1", "__importDefault", "apiFetch_1", "matchesStripeKey", "StripeAppsHttpResponse", "resp", "json", "StripeAppsHttpClient", "fetch", "host", "port", "path", "method", "headers", "requestData", "protocol", "timeout", "fetchOptions", "authHeader", "exports", "createHttpClient", "_endpoint_1", "httpClient_1", "getDashboardUserEmail", "__awaiter", "resp", "exports", "_endpoint_1", "getUserAuthorizedPermissions", "exports", "_endpoint_1", "isPermissionAuthorized", "permission", "exports", "_endpoint_1", "isSourceInAuthorizedCSP", "source", "exports", "_endpoint_1", "createOAuthState", "state", "exports", "require_platformRpcs", "__commonJSMin", "exports", "_endpoint_1", "fetchStripeSignature", "additionalPayload", "exports", "_endpoint_1", "showToast", "message_1", "args_1", "__awaiter", "message", "options", "exports", "__exportStar", "exports", "manifest_exports", "__export", "BUILD_TIME", "CustomerDetails_default", "Customers_default", "Home_default", "manifest_default", "import_ui", "import_utils", "import_react", "import_jsx_runtime", "Home", "userContext", "environment", "mailchimpExists", "setMailchimpExists", "mailchimpData", "setMailchimpData", "loading", "setLoading", "error", "setError", "createUser", "__async", "_a", "signature", "response", "checkMailchimpUser", "brand_icon_default", "mailchimpResponse", "err", "_b", "clientId", "redirectUri", "responseType", "authUrl", "Home_default", "import_ui", "import_jsx_runtime", "Customers", "userContext", "environment", "brand_icon_default", "Customers_default", "import_react", "import_ui", "import_utils", "import_jsx_runtime", "CustomerDetails", "userContext", "environment", "CLIPBOARD_TEXT", "writeToClipboard", "__async", "e", "brand_icon_default", "CustomerDetails_default", "__reExport", "manifest_exports", "BUILD_TIME", "manifest_default"]
}
